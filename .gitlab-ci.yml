image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  ASPNETCORE_ENVIRONMENT: Development
  DOTNET_USE_POLLING_FILE_WATCHER: "1"
  IMAGE_NAME: $CI_REGISTRY_IMAGE/kubysistestbackend:dev
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # SonarQube analiz önbelleği
  GIT_DEPTH: "0"  # Tüm dalları almak için

stages:
  - sonarqube-check
  - build
  - push
  - deploy

before_script:
  - apt-get install -y bash curl
  - echo "Docker daemon is ready."


sonarqube-check:
  stage: sonarqube-check
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script: 
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - "dotnet tool install --global dotnet-sonarscanner"
    - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
    - "dotnet sonarscanner begin /k:\"root_KubysisTestBackend_bf7c356a-4e9c-4183-b930-35911291e5e3\" /d:sonar.token=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
    - "dotnet build"
    - "dotnet sonarscanner end /d:sonar.token=\"$SONAR_TOKEN\""
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'

build:
  stage: build
  script:
    - docker build -t $IMAGE_NAME -f ./KubysisTestBackend/Dockerfile .

push:
  stage: push
  script:
    - docker push $IMAGE_NAME

deploy:
  stage: deploy
  image: docker/compose:latest
  script:
    - docker-compose -f docker-compose.yml pull
    - docker-compose -f docker-compose.yml up -d

